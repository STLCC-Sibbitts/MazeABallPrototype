Version 1
Core build with sort-of-working board controller script.

Version 2.1 
Added physics materials and tried to squash any bugs in the board controller script.

Version 2.2
-Physics have been upgraded
-Board Controller script makes more sense.... Cleaned up and clearer in its intent.
-Added textures to ball and board.

Version 2.3
-Fine tuned all of the game's moving pieces: Board Maximum Angle, Speed, angular drag on all materials, physics, and downward vertical force on the  ball.
-Sidewalls added, although they need a slightly better configuration.
-Renamed and commented all scripts.
-Adjusted the game objects to match their prefabs. Remeber: anytime a new script needs to be added, attach it to the prefab of that object, not the object that's currently in the game feild.
-Adjusted the textures and mesh layers of ball and board.

Version 3.1 ~PROTOTYPE~
-Cleaned up for GitHub Upload.
-Removed old artifacts and solutions left over from previous versions
-This is now the most current, working solution.

Version 3.2
-Created new 3d models of a maze board. 
-Uploaded and testing new maze boards
-Noteworthy imported resources
	--maze1.obj	*Level 2	//first upload, total junk. Does give a baseline for future iterationgs
	--maze2.3.obj	*Level 3	//made modifications to physics, movement settings, and scale. Not perfect, but functioning.
	--maze3.2.fbx	*Level 4	//.fbx file works a bit better with unity. First iteration with holes. Walls don't show up
-renamed and compiled all the different versions of models used for testing, converted them to prefabs and organized.
TODO
=make holes bigger (15')
=figure out what's up with the missing walls
=basically eliminate level 2 (possibly level 3 too)
=try using mesh colliders on player sphere

Version 3.3 
-testing different colliders and 3d model types
-now 4 levels for testing: 
	level 1 is the oldest map
	level 3 shows new board, new camera and new player ball. Corrected axis rotation
	level 4 shows the difference between .dwg, .fbx, .obj, .collida file types of the same 3d model
-added a new level "model testing ground". Used to determine final changes to board models.
-imported a nearly finalized board design (level 1 rev 2)
TODO
=Prepare for version 4
=comment out the rest of the c# scripts
=upload new model, Level 1 rev 3
=Add box colliders for edges and walls
=make new prefabs
